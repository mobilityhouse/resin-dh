#!/bin/bash

help () {
    cat << EOF
Script for setting resin shell environment
resin-vars [options]

Options:
    -h, --help
        Display this help and exit.

    -c, --config-path CONFIG_PATH
        Use a non default config.json file.
        Default: /mnt/boot/config.json
EOF
}

# Parse arguments
while [ "$#" -gt "0" ]; do
    key=$1
    case $key in
        -h|--help)
            help
            exit 0
            ;;
        -c|--config-path)
            CONFIG_PATH=$2
            shift
            ;;
        *)
            echo "[WARNING] $0 : Argument '$1' unknown. Ignoring."
            ;;
    esac
    shift
done

# Resin-boot mountpoint
BOOT_MOUNTPOINT="/mnt/boot"

# Default values
if [ -z "$CONFIG_PATH" ]; then
    CONFIG_PATH=$BOOT_MOUNTPOINT/config.json
fi

# If config.json provides redefinitions for our vars let us rewrite their
# runtime value
if [ -f $CONFIG_PATH ]; then
    eval "$(jq -r '@sh "
         API_ENDPOINT=\(.apiEndpoint // "")
         LISTEN_PORT=\(.listenPort // "")
         MIXPANEL_TOKEN=\(.mixpanelToken // "")
         PUBNUB_PUBLISH_KEY=\(.pubnubPublishKey // "")
         PUBNUB_SUBSCRIBE_KEY=\(.pubnubSubscribeKey // "")
         REGISTRY_ENDPOINT=\(.registryEndpoint // "")
         VPN_ENDPOINT=\(.vpnEndpoint // "")
         DELTA_ENDPOINT=\(.deltaEndpoint // "")
         CONFIG_HOSTNAME=\(.hostname // "")
         PERSISTENT_LOGGING=\(.persistentLogging // "")
         COUNTRY=\(.country // "")
         UUID=\(.uuid // "")
         PROVISIONING_API_KEY=\(.apiKey // "")
         DEVICE_API_KEY=\(.deviceApiKey // "")
         DEVICE_ID=\(.deviceId // "")
         USER_ID=\(.userId // "")
         APPLICATION_ID=\(.applicationId // "")
         DEVICE_TYPE=\(.deviceType // "")
         REGISTERED_AT=\(.registered_at // "")
         NTP_SERVERS=\(.ntpServers // "")
         DNS_SERVERS=\(.dnsServers // "")
         "' $CONFIG_PATH)"
    if [ -z "$API_ENDPOINT" -o -z "$LISTEN_PORT" -o -z "$MIXPANEL_TOKEN" -o -z "$PUBNUB_PUBLISH_KEY" -o -z "$PUBNUB_SUBSCRIBE_KEY" -o -z "$REGISTRY_ENDPOINT" -o -z "$VPN_ENDPOINT" ]; then
        echo "[WARNING] $0 : Couldn't read some variables from $CONFIG_PATH"
    fi
    if [ -z "$PERSISTENT_LOGGING" ]; then
        PERSISTENT_LOGGING=false
    fi
else
    echo "[WARNING] $0 : '$CONFIG_PATH' not found."
fi
